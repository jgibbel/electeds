{"version":3,"sources":["Contribute.js","CongressionalDistricts.js","About.js","Resources.js","Documents.js","RepInfo.js","RepCard.js","UrReps.js","AllReps.js","App.js","serviceWorker.js","index.js"],"names":["Contribute","Component","Resources","Documents","RepInfo","obj","name","phone","overview","notes","RepCard","id","district","title","region","loser","current","next","UrReps","state","council","councilId","councilArr","councilData","senate","senateId","senateArr","senateData","assembly","assemblyId","assemblyArr","assemblyData","house","houseId","houseArr","houseData","fedSenateData","boro","execData","boroPres","boroDA","componentDidMount","fetch","then","r","json","data","setState","electeds","senators","handleCouncil","event","councilmember","find","rep","parseInt","target","value","console","log","handleBoro","filter","handleSenate","senator","handleAssembly","assemblymember","handleHouse","representative","this","onChange","map","item","key","AllReps","body","evt","onClick","handleClick","App","to","className","exact","path","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.b043ebbf.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\nclass Contribute extends Component {\n    render() {\n        return (\n            <div>\n                <p>To send resources, documents, reviews, info on electeds, etc. email reppingnyc@gmail.com </p>\n                <p>Coming soon: how to access and edit JSON formatted files comprising the database.</p>\n            </div>\n        );\n    }\n}\n\nexport default Contribute;\n","import React, { Component } from 'react';\nimport topojson from 'topojson';\nimport * as d3 from 'd3'; \n\nclass CongressionalDistricts extends Component {\n    state = {\n        usData: null,\n        usCongress: null,\n\n    }\n    \n    // componentWillMount() {\n\n    //     var files = [\"../us.json\", \"../us-congress-113.json\"];\n\n    //     Promise.all(files.map(url => d3.json(url))).then(function(values) {\n    //         console.log(values);\n    //         console.log();\n    //     });\n    // // d3.queue()\n    // // .defer(d3.json, \"../us.json\")\n    // // .defer(d3.json, \"../us-congress-113.json\")\n    // // .await(\n    // //     (error, usData, usCongress) => {\n    // //         console.log(usData, usCongress);\n    // //     }\n    // // );\n    // }\n    \n    \n    render() {\n        return(null)\n    }\n}\n\nexport default CongressionalDistricts;   ","import React, { Component } from 'react';\n\nclass About extends Component {\n    render() {\n        return (\n            <div>\n                 <p>Share sources, documents</p>\n            </div>\n        );\n    }\n}\n\nexport default About;\n","import React, { Component } from 'react';\n\nclass Resources extends Component {\n    render() {\n        return (\n            <div>\n                <p>this will be a place to connect people with resources related to voting registration and rights, ways to keep informed, and updates to the voting process like the introduction of ranked choice.</p>\n                <p>additionally, this section can house links and information to organizations in the city doing work such as tenant organizing, mutual aid, support for the unhoused, police abolition, prison abolition, etc.</p>\n                <p>info on outside orgs collected here should be informing constituents either how to be connected to services or of the relationship btw the org and electeds.</p>\n            </div>\n        );\n    }\n}\n\nexport default Resources;\n","import React, { Component } from 'react';\n\nclass Documents extends Component {\n    render() {\n        return (\n            <div>\n                <p>this will be a place to archive documents that add to our understanding of our elected officials, for example: letters to electeds from organzing groups, dispatches from legislative caucuses, important bills, the report cuomo just put out absolving himself of responisbility for killing all those people in nursing homes, etc.</p>\n            </div>\n        );\n    }\n}\n\nexport default Documents;\n","import React from 'react';\n\nconst RepInfo = ({obj}) => {\n    return (\n        <div>\n            <p>{obj.name}</p>\n            <p>{obj.phone}</p>\n            <p>{obj.overview}</p>\n            <p>{obj.notes}</p>\n        </div>\n    );\n}\n\nexport default RepInfo;\n","import React from 'react';\nimport RepInfo from \"./RepInfo\"\n\nconst RepCard = ({obj}) => {\n    return (\n        <>\n        {obj.id ?\n        <div>\n            <hr></hr>\n            {obj.district ?\n            <p>District: {obj.id}, {obj.district}</p>\n            : null } \n            {obj.title ? \n            <p>{obj.region} {obj.title}</p>\n            : null }\n\n            {obj.loser ? \n            <>\n            <p>Current:</p>\n            <RepInfo obj={obj.loser.current} />\n            <p>Next:</p>\n            <RepInfo obj={obj.loser.next} />\n            </>\n        \n            : <RepInfo obj={obj} />}\n            <hr></hr>\n        </div>\n        : \n        <p></p>}       \n        </>\n    );\n}\n\nexport default RepCard;\n","import React, { Component } from 'react';\nimport RepCard from './RepCard'\n\nclass UrReps extends Component {\n\n    state = {\n\n        council: {},\n        councilId: \"\",\n        councilArr: [\"Select\",1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51],\n        councilData: {},\n\n        senate: {},\n        senateId: \"\",\n        senateArr: [\"Select\",1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40],\n        senateData: {},\n\n        assembly: {},\n        assemblyId: \"\",\n        assemblyArr: [\"Select\",1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90],\n        assemblyData: {},\n\n        house: {},\n        houseId: \"\",\n        houseArr: [\"Select\",3,4,5,6,7,8,9,10,11,12,13,14,15,16,17],\n        houseData: {},\n        fedSenateData: {},\n\n        boro: \"\",\n        execData: [],\n        boroPres: {},\n        boroDA: {}\n      };\n\n      componentDidMount = () => {\n        fetch('council.json')\n        .then(r => r.json())\n        .then((data) => {\n            this.setState({councilData: data.electeds})\n        })\n        fetch('stateSenate.json')\n        .then(r => r.json())\n        .then((data) => {\n            this.setState({senateData: data.electeds})\n        })\n        fetch('assembly.json')\n        .then(r => r.json())\n        .then((data) => {\n            this.setState({assemblyData: data.electeds})\n        })\n        fetch('house.json')\n        .then(r => r.json())\n        .then((data) => {\n            this.setState({houseData: data.electeds})\n        })\n        fetch('execAndSenate.json')\n        .then(r => r.json())\n        .then((data) => {\n            this.setState({execData: data.electeds, fedSenateData: data.senators})\n        })\n      }\n\n    \n      handleCouncil = (event) => {\n        var councilmember = this.state.councilData.find((rep) => rep.id === parseInt(event.target.value))\n        this.setState({ council: councilmember,\n                        councilId: councilmember.id\n        });\n        // debugger\n        console.log(this.state.council)\n      };\n\n      handleBoro = (event) => {\n        //   debugger;\n          var boroPres = this.state.execData.filter((rep) => rep.region === event.target.value).find((rep) => rep.title === \"Borough President\")\n          var boroDA= this.state.execData.filter((rep) => rep.region === event.target.value).find((rep) => rep.title === \"District Attorney\")\n        this.setState({ boroPres: boroPres, boroDA: boroDA, boro: event.target.value });\n      };\n\n\n      handleSenate = (event) => {\n        var senator = this.state.senateData.find((rep) => rep.id === parseInt(event.target.value))\n        this.setState({ senate: senator,\n        senateId: senator.id });\n      };\n\n      handleAssembly = (event) => {\n        var assemblymember = this.state.assemblyData.find((rep) => rep.id === parseInt(event.target.value))\n        this.setState({ assembly: assemblymember,\n        assemblyId: assemblymember.id});\n      };\n\n      handleHouse = (event) => {\n        var representative = this.state.houseData.find((rep) => rep.id === parseInt(event.target.value))\n        this.setState({ house: representative, houseId: representative.id });\n      };\n    \n      render() {\n        const { senate, senateArr, senateId, council, councilArr, councilId, boro, boroPres, boroDA, assembly, assemblyArr, assemblyId, house, houseArr, houseId, execData } = this.state;\n        \n    \n        return (\n          <>\n          <p>Borough---\n            <select onChange={this.handleBoro} value={boro}>\n              \n              {/* {arr.map(item => (\n                <option key={item} value={item}>\n                  {item}\n                </option>\n              ))} */}\n            <option value=\"?\">Select</option>\n            <option value=\"Brooklyn\">Brooklyn</option>\n            <option value=\"Bronx\">Bronx</option>\n            <option value=\"Queens\">Queens</option>                \n            <option value=\"Staten Island\">Staten Island</option>\n            <option value=\"Manhattan\">Manhattan</option>\n            </select>\n            </p>\n\n            <RepCard obj={boroPres} />\n            <RepCard obj={boroDA} />\n\n            <p>Council---\n            <select onChange={this.handleCouncil} value={councilId}>\n              \n              {councilArr.map(item => (\n                <option key={item} value={item}>\n                  {item}\n                </option>\n              ))}\n\n            </select>\n            </p>\n        \n            <RepCard obj={council} />\n          \n\n            <p>Senate---\n            <select onChange={this.handleSenate} value={senateId}>\n              \n              {senateArr.map(item => (\n                <option key={item} value={item}>\n                  {item}\n                </option>\n              ))}\n\n            </select></p>\n\n            <RepCard obj={senate} />\n\n            <p>Assembly---\n            <select onChange={this.handleAssembly} value={assemblyId}>\n              \n              {assemblyArr.map(item => (\n                <option key={item} value={item}>\n                  {item}\n                </option>\n              ))}\n\n            </select></p>\n\n            <RepCard obj={assembly} />\n\n            <p>House---\n            <select onChange={this.handleHouse} value={houseId}>\n              \n              {houseArr.map(item => (\n                <option key={item} value={item}>\n                  {item}\n                </option>\n              ))}\n\n            </select></p>\n            <RepCard obj={house} />\n\n            <p>Citywide</p>\n            {execData.filter((rep) => rep.region === \"State\").map((obj) => <RepCard obj={obj} />)}\n            {execData.filter((rep) => rep.region === \"City\").map((obj) => <RepCard obj={obj} />)}\n          </>\n        );\n      }\n    \n}\n\nexport default UrReps;\n","import React, { Component } from 'react';\nimport RepCard from './RepCard';\n\nclass AllReps extends Component {\n\n    state = {body: \"\",\n            councilData: [],\n            senateData: [],\n            assemblyData: [],\n            houseData: [],\n            execData: [],\n            fedSenateData: [],}\n\n\n    componentDidMount = () => {\n        fetch('council.json')\n        .then(r => r.json())\n        .then((data) => {\n            this.setState({councilData: data.electeds})\n        })\n        fetch('stateSenate.json')\n        .then(r => r.json())\n        .then((data) => {\n            this.setState({senateData: data.electeds})\n        })\n        fetch('assembly.json')\n        .then(r => r.json())\n        .then((data) => {\n            this.setState({assemblyData: data.electeds})\n        })\n        fetch('house.json')\n        .then(r => r.json())\n        .then((data) => {\n            this.setState({houseData: data.electeds})\n        })\n        fetch('execAndSenate.json')\n        .then(r => r.json())\n        .then((data) => {\n            this.setState({execData: data.electeds, fedSenateData: data.senators})\n        })\n      }\n\n\n    handleClick(evt) {\n        this.setState({body: evt})\n    }\n\n    render() {\n        const { senateData, fedSenateData, councilData, assemblyData, houseData, execData } = this.state;\n        return (\n            <div>\n                <p onClick={() => this.handleClick(\"executive\")}>Executives</p>\n                \n\n                <p onClick={() => this.handleClick(\"federal\")}>Federal</p>\n               \n\n                <p onClick={() => this.handleClick(\"senate\")}>State Senate</p>\n                \n\n                <p onClick={() => this.handleClick(\"assembly\")}>Assembly</p>\n                \n\n                <p onClick={() => this.handleClick(\"council\")}>Council</p>\n                {this.state.body === \"executive\" ? \n                <>{execData.map((obj) => <RepCard obj={obj} />)}</>\n                : null}\n                {this.state.body === \"federal\" ? \n                <><p>Senate:</p>\n                {fedSenateData.map((obj) => <RepCard obj={obj} />)}\n                <p>House:</p>\n                {houseData.map((obj) => <RepCard obj={obj} />)}\n                </> : null}\n                {this.state.body === \"senate\" ? <>{senateData.map((obj) => <RepCard obj={obj} />)}</> : null}\n                {this.state.body === \"assembly\" ? <>{assemblyData.map((obj) => <RepCard obj={obj} />)}</>: null}\n                {this.state.body === \"council\" ? <>{councilData.map((obj) => <RepCard obj={obj} />)}</> : null}\n            </div>\n        );\n    }\n}\n\nexport default AllReps;\n","import React from 'react';\nimport './App.css';\nimport CongressionalDistricts from './CongressionalDistricts.js';\n\nimport About from './About';\nimport Contribute from './Contribute';\nimport Resources from './Resources';\nimport Documents from './Documents.js';\nimport UrReps from './UrReps.js';\nimport AllReps from './AllReps';\n\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  NavLink,\n  Link\n} from \"react-router-dom\";\n\nfunction App() {\n  return (\n    <Router>\n      <Link  to=\"/support\"><p className=\"right\">support the work</p></Link>\n\n    <div className=\"App\">     \n    {/* <svg width=\"960\" height=\"600\"> <CongressionalDistricts width={960} height={600} />\n    </svg> */}\n          <Route exact path=\"/support\"><p>email reppingnyc@gmail.com for inquiries, to join the team, or throw some dough. ty, peace n love.</p></Route>\n    <br></br>   \n     <Link className=\"\" to=\"/about\">about</Link>\n     <Route exact path=\"/about\"><p>This weblog is intended to provide young people access to information concerning elected civil servants in New York City.</p></Route>\n     \n<br></br>\n     <Link className=\"\" to=\"/resources\">resources</Link>\n     <Route exact path=\"/resources\"><Resources /></Route>\n<br></br>\n     <Link className=\"\" to=\"/documents\">documents</Link>\n     <Route exact path=\"/documents\"><Documents /></Route>\n     <br></br>\n     <Link className=\"\" to=\"/urReps\">find your representation</Link>\n     <br></br>\n     <Link className=\"\" to=\"/allReps\">all electeds by body</Link>\n     <Route exact path=\"/urReps\"><UrReps /></Route>\n     <Route exact path=\"/allReps\"><AllReps /></Route>\n     <Route exact path=\"/about\"><Contribute /></Route>\n     \n    </div>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}